##############################################################################
# WHAIS - An advanced database system
# Copyright (C) 2008  Iulian Popa
#
# Address: Str Olimp nr. 6
#           Pantelimon Ilfov,
#           Romania
# Phone:   +40721939650
# e-mail:  popaiulian@gmail.com
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
##############################################################################
##############################################################################
# Describes common WHAIS procedures signatures used to manipulate WHAIS'
# array of values in user procedures.
##############################################################################

#@guard whais_std_array


#Get the count of elements from an array.
EXTERN PROCEDURE count(a ARRAY) RETURN UINT64;

#Sort the elements of array
#In:
#   @a       - The array to be sorted.
#   @reverse - Set to TRUE to sort reversely.
#   @unique  - Set to TRUE to remove duplicates.
#Out:
#   Another array but with the elements sort based on the specified order.
EXTERN PROCEDURE sort(a ARRAY, r BOOL, unique BOOL) RETURN BOOL;

#Search the smallest element.
#In:
#   @a       - An array value.
#   @first   - TRUE in case of duplicates entries it will return the last or
#              the first such index
#   @min     - Search only for values that are bigger or equal with this one. 
#Out:
#   The index where the element can be found in the array.
EXTERN PROCEDURE get_min(a ARRAY, first BOOL, min UNDEFINED) RETURN UINT64;

#Search the biggest element.
#In:
#   @a       - An array value.
#   @first   - TRUE in case of duplicates entries it will return the last or
#              the first such index
#   @max     - Search only for values that are less or equal with this one. 
#Out:
#   The index where the element can be found in the array.
EXTERN PROCEDURE get_max(a ARRAY, first BOOL, max UNDEFINED) RETURN UINT64;

#Set operations with array elements.
EXTERN PROCEDURE array_intersection (a1 ARRAY, a2 ARRAY) RETURN ARRAY;
EXTERN PROCEDURE array_union (a1 ARRAY, a2 ARRAY) RETURN ARRAY;
EXTERN PROCEDURE array_diff (a1 ARRAY, a2 ARRAY) RETURN ARRAY;

#Add an element into an array
EXTERN PROCEDURE array_pushback (a1 ARRAY, v UNDEFINED) RETURN ARRAY;

#Truncate an array.
EXTERN PROCEDURE truncate (a1 ARRAY, count UINT64) RETURN ARRAY;

#Compute the corresponding array hash value.
EXTERN PROCEDURE hash_array (a ARRAY) RETURN UINT64;